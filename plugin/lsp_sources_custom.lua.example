-- 1. if source is custom and external_cmd then the condition of the config is
--    merged with a check for the needed binary
-- 2. if not custom then it tries to fetch a builtin source
local M = {}

M.get_custom_sources = function(null_ls)
return {
  black = {
    custom = false,
    type = "formatting",
    external_cmd = true,
  },
  stylua = {
    custom = false,
    type = "formatting",
    external_cmd = true,
  }
}
end

local M = {}

M.get_custom_sources = function(null_ls)
  if not null_ls then
    return {}
  end

  -- add your sources you want to use here
  return {
    black = {
      custom = false,
      type = "formatting",
      external_cmd = "black",
    },
    stylua = {
      custom = false,
      type = "formatting",
      external_cmd = "stylua",
    },
    printenv = {
      custom = false,
      type = "hover",
    },
    shellchecker_formatter = {
      custom = true,
      type = "formatting",
      external_cmd = false,
      config = {
        method = null_ls.methods.FORMATTING,
        filetypes = { "sh" },
        generator = null_ls.formatter({
            command = "sh",
            args = { "-c", "shellcheck $0 --format=diff | patch $0 -o-", '$FILENAME' },
            to_stdin = true,
            from_stderr = true,
        }),
      }
    }
  }
end

return M
